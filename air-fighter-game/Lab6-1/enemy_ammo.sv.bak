//-------------------------------------------------------------------------
//    Ammo.sv                                                            --
//-------------------------------------------------------------------------


module  enemy_ammo ( input Reset, frame_clk,
					input [7:0] keycode, keycode1, keycode2,
               input [9:0]  BallX, BallY, Ball_W, Ball_H,
					output [9:0] AmmoX, AmmoY, Ammo_W, Ammo_H,
					output flag
				 );
    
    logic [9:0] Ammo_X_Pos, Ammo_X_Motion, Ammo_Y_Pos, Ammo_Y_Motion, width, height;
	 
    logic [9:0] Ammo_X_Start;  // Start position on the X axis
    logic [9:0] Ammo_Y_Start;  // Start position on the Y axis
	 logic flag1;
	 
	 //Taking center bottom point of ammo as AmmoX and AmmoY
	 
	 assign Ammo_X_Start = BallX;
	 assign Ammo_Y_Start = BallY - Ball_H;
	 
//    parameter [9:0] Ammo_X_Min=5;       // Leftmost point on the X axis
//    parameter [9:0] Ammo_X_Max=639;     // Rightmost point on the X axis
    parameter [9:0] Ammo_Y_Min = 0;       // Topmost point on the Y axis
//    parameter [9:0] Ammo_Y_Max=474;     // Bottommost point on the Y axis	 
//    parameter [9:0] Ammo_X_Step=1;      // Step size on the X axis

    parameter [9:0] Ammo_Y_Step = 1;      // Step size on the Y axis
	 
    assign width = 5; //Half  
	 assign height = 20;
   
    always_ff @ (posedge Reset or posedge frame_clk )
    begin: Move_Ammo
        if (Reset)  // Asynchronous Reset
        begin 
            Ammo_Y_Motion <= 10'd0; //Ball_Y_Step;
				Ammo_X_Motion <= 10'd0; //Ball_X_Step;
				Ammo_Y_Pos <= Ammo_Y_Start;
				Ammo_X_Pos <= Ammo_X_Start;
				flag1 <= 1'b0; //Do not draw ammo
        end
		  else if (flag1 == 1'b1) //Ammo is already shot, move it upwards and check boundary
		  begin
				Ammo_X_Motion <= 0;
				Ammo_Y_Motion <= -2;
				if ( Ammo_Y_Pos <= Ammo_Y_Min )
					begin
					Ammo_Y_Motion <= 0;  // 2's complement.
					Ammo_X_Motion <= 0;
					flag1 <= 1'b0;
					end
				Ammo_Y_Pos <= (Ammo_Y_Pos + Ammo_Y_Motion);
				Ammo_X_Pos <= (Ammo_X_Pos + Ammo_X_Motion);
		  end
        else if(flag1== 1'b0)
        begin
				if(keycode == 8'h2c || keycode1 == 8'h2c || keycode2 == 8'h2c)
				begin
					Ammo_X_Motion <= 0;
					Ammo_Y_Motion <= -2;
					Ammo_Y_Pos <= Ammo_Y_Start;
					Ammo_X_Pos <= Ammo_X_Start;
					flag1 <= 1'b1;
				end
			end
    end
	 	
    assign AmmoX = Ammo_X_Pos;
    assign AmmoY = Ammo_Y_Pos;
	 assign Ammo_W = width;  
	 assign Ammo_H = height;
	 assign flag = flag1;
    

endmodule
